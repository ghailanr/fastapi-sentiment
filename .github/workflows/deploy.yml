#name: Deploy FastAPI to Azure
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    environment:
#      name: 'Production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#    permissions:
#      id-token: write
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up Python version
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#
#      - name: Install dependencies
#        run: pip install --no-cache-dir -r requirements.txt
#
#      - name: Define PYTHONPATH
#        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV
#
#      - name: Execute unit tests
#        run: |
#          pytest tests --disable-warnings
#
#      - name: Zip artifact for deployment
#        run: zip -r release.zip . -x "venv/*" ".git/*" ".github/*" "tests/*" "*.pyc" "__pycache__/*"
#
#      - name: Upload artifact for deployment jobs
#        uses: actions/upload-artifact@v4
#        with:
#          name: python-app
#          path: |
#            release.zip
#            !venv/
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    environment:
#      name: 'Production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#    permissions:
#      id-token: write #This is required for requesting the JWT
#
#    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v4
#        with:
#          name: python-app
#
#      - name: Unzip artifact for deployment
#        run: unzip release.zip
#
#      - name: Install dependencies on Azure
#        run: |
#          python -m venv venv
#          source venv/bin/activate
#          pip install --no-cache-dir -r requirements.txt
#
#      - name: Check installed packages
#        run: pip list
#
#      - name: Se connecter à Azure
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Déployer l'API
#        uses: azure/webapps-deploy@v3
#        with:
#          app-name: "fastapi-sentiment"
#          slot-name: 'Production'
#          package: .
#---------------------------------------------------------------------------------
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#    environment:
#      name: 'Production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#    permissions:
#      id-token: write
#
#    steps:
#      - name: Cloner le repo
#        uses: actions/checkout@v4
#
#      - name: Configurer Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#
#      - name: Create and start virtual environment
#        run: |
#          python -m venv venv
#          source venv/bin/activate
#
#      - name: Install dependencies
#        run: pip install -r requirements.txt
#
#      - name: Définir le PYTHONPATH
#        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV
#
#      - name: Exécuter les tests unitaires
#        run: |
#          pytest tests --maxfail=5 --disable-warnings
#
#      - name: Zip artifact for deployment
#        run: zip release.zip ./* -r
#
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v3
#        with:
#          name: python-app
#
#      - name: Unzip artifact for deployment
#        run: unzip release.zip
#
#      - name: Upload artifact for deployment jobs
#        uses: actions/upload-artifact@v3
#        with:
#          name: python-app
#          path: |
#            release.zip
#            !venv/
#
#      - name: Se connecter à Azure
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Déployer l'API
#        uses: azure/webapps-deploy@v3
#        with:
#          app-name: "fastapi-sentiment"
#          slot-name: 'Production'
#          package: .


name: Build and deploy Python app to Azure Web App - fastapi-sentiment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Define PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Execute unit tests
        run: |
          pytest tests --disable-warnings

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'fastapi-sentiment'
          slot-name: 'Production'